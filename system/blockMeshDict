/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v1912                                 |
|   \\  /    A nd           | Website:  www.openfoam.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

// convertToMeters    1;
vertices
(
    (0.000000 0.000000 0.000000) //0
    (0.000000 0.000000 15.000000) //1
    (0.707107 0.000000 0.000000) //2 
    (0.000000 0.707107 0.000000) //3
    (-0.707107 0.000000 0.000000) //4
    (-0.000000 -0.707107 0.000000) //5
    (0.78107 0.000000 0.000000) //6
    (0.000000 0.78107 0.000000) //7
    (-0.78107 0.000000 0.000000) //8
    (-0.000000 -0.78107 0.000000) //9
    (1.000000 0.000000 0.000000) //10
    (0.000000 1.000000 0.000000) //11
    (-1.000000 0.000000 0.000000) //12
    (-0.000000 -1.000000 0.000000) //13
    (0.707107 0.000000 15.000000) //14
    (0.000000 0.707107 15.000000) //15
    (-0.707107 0.000000 15.000000) //16
    (-0.000000 -0.707107 15.000000) //17
    (0.78107 0.000000 15.000000) //18
    (0.000000 0.78107 15.000000) //19
    (-0.78107 0.000000 15.000000) //20
    (-0.000000 -0.78107 15.000000) //21
    (1.000000 0.000000 15.000000) //22
    (0.000000 1.000000 15.000000) //23
    (-1.000000 0.000000 15.000000) //24
    (-0.000000 -1.000000 15.000000) //25
    (0.000000 0.000000 18.000000) //26
    (0.707107 0.000000 18.000000) //27
    (0.000000 0.707107 18.000000) //28
    (-0.707107 0.000000 18.000000) //29
    (-0.000000 -0.707107 18.000000) //30
    (0.78107 0.000000 18.000000) //31
    (0.000000 0.78107 18.000000) //32
    (-0.78107 0.000000 18.000000) //33
    (-0.000000 -0.78107 18.000000) //34
    (1.000000 0.000000 18.000000) //35
    (0.000000 1.000000 18.000000) //36
    (-1.000000 0.000000 18.000000) //37
    (-0.000000 -1.000000 18.000000) //38

);

blocks
(
    hex (0   2   3   0   1  14  15   1) (10 10 100) simpleGrading (1 1 1)
    hex (0   3   4   0   1  15  16   1) (10 10 100) simpleGrading (1 1 1)
    hex (0   4   5   0   1  16  17   1) (10 10 100) simpleGrading (1 1 1)
    hex (0   5   2   0   1  17  14   1) (10 10 100) simpleGrading (1 1 1)
    hex (2   6   7   3  14  18  19  15) (10 10 100) simpleGrading (1 1 1)
    hex (3   7   8   4  15  19  20  16) (10 10 100) simpleGrading (1 1 1)
    hex (4   8   9   5  16  20  21  17) (10 10 100) simpleGrading (1 1 1)
    hex (5   9   6   2  17  21  18  14) (10 10 100) simpleGrading (1 1 1)
    hex (6  10  11   7  18  22  23  19) (10 10 100) simpleGrading (1 1 1)
    hex (7  11  12   8  19  23  24  20) (10 10 100) simpleGrading (1 1 1)
    hex (8  12  13   9  20  24  25  21) (10 10 100) simpleGrading (1 1 1)
    hex (9  13  10   6  21  25  22  18) (10 10 100) simpleGrading (1 1 1)
    hex ( 1  14  15   1  26  27  28  26) (10 10 10) simpleGrading (1 1 1)
    hex ( 1  15  16   1  26  28  29  26) (10 10 10) simpleGrading (1 1 1)
    hex ( 1  16  17   1  26  29  30  26) (10 10 10) simpleGrading (1 1 1)
    hex ( 1  17  14   1  26  30  27  26) (10 10 10) simpleGrading (1 1 1)
    hex (14  18  19  15  27  31  32  28) (10 10 10) simpleGrading (1 1 1)
    hex (15  19  20  16  28  32  33  29) (10 10 10) simpleGrading (1 1 1)
    hex (16  20  21  17  29  33  34  30) (10 10 10) simpleGrading (1 1 1)
    hex (17  21  18  14  30  34  31  27) (10 10 10) simpleGrading (1 1 1)
    hex (18  22  23  19  31  35  36  32) (10 10 10) simpleGrading (1 1 1)
    hex (19  23  24  20  32  36  37  33) (10 10 10) simpleGrading (1 1 1)
    hex (20  24  25  21  33  37  38  34) (10 10 10) simpleGrading (1 1 1)
    hex (21  25  22  18  34  38  35  31) (10 10 10) simpleGrading (1 1 1)
);

edges
(
    arc 2 3 (0.5000000 0.5000000 0.000000)
    arc 3 4 (-0.5000000 0.5000000 0.000000)
    arc 4 5 (-0.5000000 -0.5000000 0.000000)
    arc 5 2 (0.5000000 -0.5000000 0.000000)
    arc 6 7 (0.552745 0.552745 0.000000)
    arc 7 8 (-0.552745 0.552745 0.000000)
    arc 8 9 (-0.552745 -0.552745 0.000000)
    arc 9 6 (0.552745 -0.552745 0.000000)
    arc 10 11 (0.707107 0.707107 0.000000)
    arc 11 12 (-0.707107 0.707107 0.000000)
    arc 12 13 (-0.707107 -0.707107 0.000000)
    arc 13 10 (0.707107 -0.707107 0.000000)
    arc 14 15 (0.5000000 0.5000000 15.000000)
    arc 15 16 (-0.5000000 0.5000000 15.000000)
    arc 16 17 (-0.5000000 -0.5000000 15.000000)
    arc 17 14 (0.5000000 -0.5000000 15.000000)
    arc 18 19 (0.552745 0.552745 15.000000)
    arc 19 20 (-0.552745 0.552745 15.000000)
    arc 20 21 (-0.552745 -0.552745 15.000000)
    arc 21 18 (0.552745 -0.552745 15.000000)
    arc 22 23 (0.707107 0.707107 15.000000)
    arc 23 24 (-0.707107 0.707107 15.000000)
    arc 24 25 (-0.707107 -0.707107 15.000000)
    arc 25 22 (0.707107 -0.707107 15.000000)
    arc 27 28 (0.5000000 0.5000000 18.000000)
    arc 28 29 (-0.5000000 0.5000000 18.000000)
    arc 29 30 (-0.5000000 -0.5000000 18.000000)
    arc 30 27 (0.5000000 -0.5000000 18.000000)
    arc 31 32 (0.552745 0.552745 18.000000)
    arc 32 33 (-0.552745 0.552745 18.000000)
    arc 33 34 (-0.552745 -0.552745 18.000000)
    arc 34 31 (0.552745 -0.552745 18.000000)
    arc 35 36 (0.707107 0.707107 18.000000)
    arc 36 37 (-0.707107 0.707107 18.000000)
    arc 37 38 (-0.707107 -0.707107 18.000000)
    arc 38 35 (0.707107 -0.707107 18.000000)
);

boundary
(
    outlet
    {
        type patch;
        faces
        (
            (0  3  2  0)
            (0  4  3  0)
            (0  5  4  0)
            (0  2  5  0)
        );
    }
    // bottom_inner_cylinder
    // {
    //     type patch;
    //     faces
    //     (
    //         (1  15  14   1)
    //         (1  16  15   1)
    //         (1  17  16   1)
    //         (1  14  17   1)
    //     );
    // }
    top_pipe
    {
        type wall;
        faces
        (
            (3  7  6  2)
            (4  8  7  3)
            (5  9  8  4)
            (2  6  9  5)
        );
    }
    // bottom_pipe
    // {
    //     type wall;
    //     faces
    //     (
    //         (15  19  18  14)
    //         (16  20  19  15)
    //         (17  21  20  16)
    //         (14  18  21  17)
    //     );
    // }
    inlet
    {
        type patch;
        faces
        (
            (7  11  10   6)
            (8  12  11   7)
            (9  13  12   8)
            (6  10  13   9)
        );
    }
    // bottom_wall
    // {
    //     type wall;
    //     faces
    //     (
    //         (26 28  27  26)
    //         (26 29  28  26)
    //         (26 30  29  26)
    //         (26 27  30  26)
    //     );
    // }
    outer_1
    {
        type wall;
        faces
        (
            (10  11  23  22)
            (11  12  24  23)
            (12  13  25  24)
            (13  10  22  25)
        );
    }
    outer_2
    {
        type wall;
        faces
        (
            (22  23  36  35)
            (23  24  37  36)
            (24  25  38  37)
            (25  22  35  38)
        );
    }
    bottom_1
    {
        type wall;
        faces
        (
            (26  28  27  26)
            (26  29  28  26)
            (26  30  29  26)
            (26  27  30  26)
        );
    }
    bottom_2
    {
        type wall;
        faces
        (
            (28  32  31  27)
            (29  33  32  28)
            (30  34  33  29)
            (27  31  34  30)
        );
    }
    bottom_3
    {
        type wall;
        faces
        (
            (32  36  35  31)
            (33  37  36  32)
            (34  38  37  33)
            (31  35  38  34)
        );
    }
);

mergePatchPairs
(
);
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //


